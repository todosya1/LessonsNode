Этот пример демонстрирует, как создать простой HTTP-сервер в Node.js с использованием встроенного модуля http.
console.log(`The server is running on http://localhost:${PORT}`);

На изображениях рассматриваются аспекты ответа HTTP-сервера и связанные с ними понятия, такие как статусные коды, заголовки и MIME-тип. Давайте разберём основные моменты.

1. Ответ HTTP-сервера
Ответ состоит из трёх основных частей:

Строка статуса:

Содержит версию протокола HTTP, статусный код и сообщение.
Пример: HTTP/1.1 200 OK.
Заголовки (Headers):

Передают дополнительную информацию, такую как тип контента, длина контента и параметры соединения.
Пример:
less
Копировать
Редактировать
Content-Type: text/html
Content-Length: 44
Тело ответа (Body):

Содержит данные, которые сервер отправляет клиенту (например, HTML-страница, JSON-данные или изображение).
2. Статусные коды
Статусные коды делятся на 5 групп:

1xx (Informational): Информационные.
100 Continue: Сервер готов принять запрос.
2xx (Successful): Успешные.
200 OK: Запрос выполнен успешно.
3xx (Redirection): Перенаправления.
301 Moved Permanently: Ресурс перемещён на другой URL.
4xx (Client Errors): Ошибки клиента.
404 Not Found: Ресурс не найден.
5xx (Server Errors): Ошибки сервера.
500 Internal Server Error: Внутренняя ошибка сервера.
3. MIME-типы
MIME (Multipurpose Internet Mail Extensions) — стандарт для определения типа передаваемого контента:

Примеры MIME-типов:
text/plain: Простой текст.
text/html: HTML-документ.
image/jpeg: Изображение JPEG.
application/json: JSON-данные.
application/pdf: PDF-файл.
Пример заголовка:

arduino
Копировать
Редактировать
Content-Type: text/html
Означает, что тело ответа содержит HTML-страницу.

Пример создания сервера с заголовками и телом:
Код server.js:
javascript
Копировать
Редактировать
const http = require('http');

const server = http.createServer((req, res) => {
    // Установка заголовков
    res.writeHead(200, {
        'Content-Type': 'text/html',
        'Connection': 'keep-alive',
    });

    // Отправка тела ответа
    res.end('<html><head></head><body><h1>Hello, Node.js!</h1></body></html>');
});

const PORT = 3000;
server.listen(PORT, () => {
    console.log(`Server is running on http://localhost:${PORT}`);
});
Шаги для запуска:
Сохраните код в файл server.js.
Выполните команду:
bash
Копировать
Редактировать
node server.js
Перейдите в браузере на http://localhost:3000, чтобы увидеть результат.
