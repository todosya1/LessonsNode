На изображениях представлены два способа работы с HTTP-заголовками в Node.js: setHeader() и writeHead(). Давайте разберём их различия и применение.

1. setHeader()
Что делает: Устанавливает заголовки ответа HTTP до отправки тела ответа.
Когда использовать: Если нужно добавлять или изменять заголовки до отправки тела ответа.
Особенности:
Можно вызывать несколько раз для добавления или изменения разных заголовков.
Заголовки отправляются автоматически при вызове res.end().
Пример использования:

res.setHeader('Content-Type', 'text/html');
res.setHeader('X-Powered-By', 'Node.js');

2. writeHead()
Что делает: Устанавливает статусный код ответа и заголовки одновременно.
Когда использовать: Если нужно за один вызов установить код состояния и все заголовки.
Особенности:
Должен быть вызван только один раз.
После вызова writeHead() нельзя изменять заголовки.
Пример использования:

res.writeHead(200, {
  'Content-Type': 'text/html',
  'X-Powered-By': 'Node.js',
});
Различия
Особенность	setHeader()	writeHead()
Гибкость	Позволяет добавлять/изменять заголовки по отдельности.	Устанавливает все заголовки за один вызов.
Повторное использование	Можно вызывать несколько раз.	Вызывается только один раз.
Код состояния	Устанавливается отдельно через res.statusCode.	Устанавливается внутри writeHead().
Пример с сервером
javascript
Копировать
Редактировать
const http = require('http');

const server = http.createServer((req, res) => {
    // Устанавливаем заголовки с помощью setHeader
    res.setHeader('Content-Type', 'text/html');
    res.setHeader('X-Powered-By', 'Node.js');
    res.statusCode = 200;

    // Отправляем ответ
    res.end('<h1>Hello, Node.js!</h1>');
});

server.listen(3000, () => {
    console.log('Server running on http://localhost:3000');
});
Пример с writeHead
javascript
Копировать
Редактировать
const http = require('http');

const server = http.createServer((req, res) => {
    // Устанавливаем статусный код и заголовки
    res.writeHead(200, {
        'Content-Type': 'text/html',
        'X-Powered-By': 'Node.js',
    });

    // Отправляем ответ
    res.end('<h1>Hello, Node.js!</h1>');
});

server.listen(3000, () => {
    console.log('Server running on http://localhost:3000');
});


Просмотр заголовков ответа в браузере:
Запустите сервер.
Откройте браузер и перейдите на http://localhost:3000.
Нажмите F12 (откроется панель разработчика).
Перейдите на вкладку Network → Headers → Response Headers, чтобы увидеть заголовки.